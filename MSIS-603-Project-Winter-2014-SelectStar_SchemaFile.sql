IF NOT EXISTS (SELECT NAME 
				FROM MASTER.DBO.SYSDATABASES 
				WHERE NAME = N'MSIS-603-Project-Winter-2014-SelectStar')
CREATE DATABASE "MSIS-603-Project-Winter-2014-SelectStar"
GO

USE "MSIS-603-Project-Winter-2014-SelectStar"
GO

CREATE TABLE CUSTOMER_DETAILS (
	CUSTOMER_ID INT IDENTITY(1,1) PRIMARY KEY,
	CUSTOMER_NAME VARCHAR(50) NOT NULL,
	CUSTOMER_ADDRESS VARCHAR(50) NOT NULL,
	CUSTOMER_CITY VARCHAR(50) NOT NULL, 
	CUSTOMER_STATE VARCHAR(50) NOT NULL,
	CUSTOMER_ZIP VARCHAR(50) NOT NULL,
	CUSTOMER_COUNTRY VARCHAR(50) NOT NULL,
	CUSTOMER_EMAIL VARCHAR(50),
	CUSTOMER_PHONE VARCHAR(50) NOT NULL
	)
GO

CREATE TABLE STATUSES (
	STATUS_ID INT IDENTITY(1,1) PRIMARY KEY,
	STATUS_DESCRIPTION VARCHAR(50) NOT NULL
	)
GO

CREATE INDEX STATUS_INDEX
ON STATUSES(STATUS_ID)
GO

CREATE TABLE DISCOUNTS (
	DISCOUNT_ID INT IDENTITY(1,1) PRIMARY KEY,
	DISCOUNT_PERCENT FLOAT NOT NULL,
	DISCOUNT_DESCRIPTION VARCHAR(50) NOT NULL
	)
GO

CREATE TABLE SALES_ORDERS (
	ORDER_ID INT IDENTITY(1,1) PRIMARY KEY,
	CUSTOMER_ID INT NOT NULL,
	SHIP_DATE DATE NOT NULL,
	ORDER_DATE DATE NOT NULL
		CONSTRAINT "SO_DATE" DEFAULT GETDATE(),
	STATUS_ID INT NOT NULL
		CONSTRAINT "SO_STATUS" DEFAULT 1,
	GROSS_PRICE DECIMAL(8,2),
	DISCOUNT_ID INT NOT NULL
		CONSTRAINT "NO_DISCOUNT" DEFAULT 1,
	NET_PRICE DECIMAL(8,2),
	CONSTRAINT FK_CUST_FOR_SO FOREIGN KEY (CUSTOMER_ID)
		REFERENCES CUSTOMER_DETAILS (CUSTOMER_ID),
	CONSTRAINT FK_STAT_FOR_SO FOREIGN KEY (STATUS_ID)
		REFERENCES STATUSES (STATUS_ID),
	CONSTRAINT FK_DISC_FOR_SO FOREIGN KEY (DISCOUNT_ID)
		REFERENCES DISCOUNTS (DISCOUNT_ID)
	)
GO

CREATE TABLE PRODUCTS (
	PRODUCT_ID INT IDENTITY(1,1) PRIMARY KEY,
	PRODUCT_NAME VARCHAR(50) NOT NULL,
	PRODUCT_DESCRIPTION VARCHAR(50) NOT NULL,
	PRODUCT_PRICE DECIMAL(8,2) NOT NULL,
	QTY_ONHAND INT NOT NULL
	)
GO

CREATE TABLE HISTORICAL_PRICE (
	PRODUCT_ID INT NOT NULL,
	PRICE DECIMAL(8,2) NOT NULL,
	DATE_CHANGED DATE NOT NULL
	)
GO

CREATE TRIGGER TRIG_HIST_PRICE
ON PRODUCTS AFTER UPDATE
AS
	IF UPDATE(PRODUCT_PRICE)
	BEGIN
		DECLARE @Product INT
		SET @Product = (Select PRODUCT_ID
							from deleted)

		INSERT INTO HISTORICAL_PRICE(PRODUCT_ID, PRICE, DATE_CHANGED)
		SELECT P.PRODUCT_ID, P.PRODUCT_PRICE, GETDATE()
		FROM PRODUCTS P
		WHERE P.PRODUCT_ID = @PRODUCT
	END
GO 

CREATE TABLE SALES_ORDER_ITEM (
	ORDER_ID INT NOT NULL,
	PRODUCT_ID INT NOT NULL,
	QTY_ORDERED INT NOT NULL,
	QTY_MADE INT
		CONSTRAINT "NO_SOI" DEFAULT 0,
	ITEM_PRICE DECIMAL(8,2) NOT NULL,
	STATUS_ID INT NOT NULL
		CONSTRAINT "SOI_STATUS" DEFAULT 1,
	CONSTRAINT PK_ORDER_PRODUCT PRIMARY KEY CLUSTERED (ORDER_ID, PRODUCT_ID),
	CONSTRAINT FK_ORDER_TO_PROD FOREIGN KEY (ORDER_ID)
		REFERENCES SALES_ORDERS (ORDER_ID),
	CONSTRAINT FK_PROD_TO_ORDER FOREIGN KEY (PRODUCT_ID)
		REFERENCES PRODUCTS (PRODUCT_ID),
	CONSTRAINT FK_STAT_FOR_SOI FOREIGN KEY (STATUS_ID)
		REFERENCES STATUSES (STATUS_ID)
	)
GO

CREATE TABLE INGREDIENTS (
	INGREDIENT_ID INT IDENTITY(1,1) PRIMARY KEY,
	INGREDIENT_NAME VARCHAR(50) NOT NULL,
	INGREDIENT_DESCRIPTION VARCHAR(50) NOT NULL,
	QTY_AVAILABLE INT NOT NULL
		CONSTRAINT "NO-INGR" DEFAULT 0
	)
GO

CREATE TABLE RECIPES (
	PRODUCT_ID INT NOT NULL,
	INGREDIENT_ID INT NOT NULL,
	QTY_NEEDED INT NOT NULL
	CONSTRAINT PK_PROD_INGR PRIMARY KEY CLUSTERED (PRODUCT_ID, INGREDIENT_ID),
	CONSTRAINT FK_PROD_TO_REC FOREIGN KEY (PRODUCT_ID)
		REFERENCES PRODUCTS (PRODUCT_ID),
	CONSTRAINT FK_INGR_TO_REC FOREIGN KEY (PRODUCT_ID)
		REFERENCES INGREDIENTS (INGREDIENT_ID)
	)
GO

CREATE TABLE SUPPLIER_DETAILS (
	SUPPLIER_ID INT IDENTITY(1,1) PRIMARY KEY,
	SUPPLIER_NAME VARCHAR(50) NOT NULL,
	SUPPLIER_ADDRESS VARCHAR(50) NOT NULL,
	SUPPLIER_CITY VARCHAR(50) NOT NULL,
	SUPPLIER_STATE VARCHAR(50) NOT NULL,
	SUPPLIER_ZIP VARCHAR(50) NOT NULL,
	SUPPLIER_COUNTRY VARCHAR(50) NOT NULL,
	SUPPLIER_EMAIL VARCHAR(50),
	SUPPLIER_PHONE VARCHAR(50) NOT NULL
	)
GO

CREATE TABLE SUPPLIER_INGREDIENTS (
	SUPPLIER_ID INT NOT NULL,
	INGREDIENT_ID INT NOT NULL,
	SUPPLIER_QUOTE DECIMAL(8,2) NOT NULL,
	CONSTRAINT PK_SUP_INGR PRIMARY KEY CLUSTERED (SUPPLIER_ID, INGREDIENT_ID),
	CONSTRAINT FK_SUP_TO_ING FOREIGN KEY (SUPPLIER_ID)
		REFERENCES SUPPLIER_DETAILS (SUPPLIER_ID),
	CONSTRAINT FK_INGR_TO_SUP FOREIGN KEY (INGREDIENT_ID)
		REFERENCES INGREDIENTS (INGREDIENT_ID)
	)
GO

CREATE TABLE PURCHASE_ORDERS (
	PO_ID INT IDENTITY(1,1) PRIMARY KEY,
	SUPPLIER_ID INT NOT NULL,
	DATE_ORDERED DATE NOT NULL
		CONSTRAINT "PO_DATE" DEFAULT GETDATE(),
	PO_QUOTE DECIMAL(8,2),
	STATUS_ID INT NOT NULL
		CONSTRAINT "PO_STATUS" DEFAULT 1,
	DATE_RECEIVED DATE,
	CONSTRAINT FK_SUP_TO_PO FOREIGN KEY (SUPPLIER_ID)
		REFERENCES SUPPLIER_DETAILS (SUPPLIER_ID),
	CONSTRAINT FK_STAT_FOR_PO FOREIGN KEY (STATUS_ID)
		REFERENCES STATUSES (STATUS_ID),
	)
GO

CREATE TABLE PO_ITEMS (
	PO_ID INT,
	INGREDIENT_ID INT,
	QTY_ORDERED INT NOT NULL,
	PRICE DECIMAL(8,2) NOT NULL,
	CONSTRAINT PK_PO_INGR PRIMARY KEY CLUSTERED (PO_ID, INGREDIENT_ID),
	CONSTRAINT FK_PO_TO_INGR FOREIGN KEY (PO_ID)
		REFERENCES PURCHASE_ORDERS (PO_ID),
	CONSTRAINT FK_INGR_TO_PO FOREIGN KEY (INGREDIENT_ID)
		REFERENCES INGREDIENTS (INGREDIENT_ID),
	)
GO
